-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity shake128_10304 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    output_r_ce1 : OUT STD_LOGIC;
    output_r_we1 : OUT STD_LOGIC;
    output_r_d1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    input_r_ce0 : OUT STD_LOGIC;
    input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    input_r_ce1 : OUT STD_LOGIC;
    input_r_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of shake128_10304 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_7A : STD_LOGIC_VECTOR (6 downto 0) := "1111010";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_1F00 : STD_LOGIC_VECTOR (15 downto 0) := "0001111100000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv14_54 : STD_LOGIC_VECTOR (13 downto 0) := "00000001010100";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv14_2808 : STD_LOGIC_VECTOR (13 downto 0) := "10100000001000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_854 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_KeccakF1600_StatePer_fu_716_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_716_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal reg_861 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_868 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_875 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_882 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_889 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_896 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_903 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_910 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_917 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_924 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_931 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_938 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_945 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_952 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_959 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_966 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_973 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_980 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_987 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_994 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_1007_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_reg_1493 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln451_fu_1013_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln451_reg_1498 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln449_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_1017_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln_reg_1505 : STD_LOGIC_VECTOR (2 downto 0);
    signal input_load_15_reg_1526 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal input_load_16_reg_1532 : STD_LOGIC_VECTOR (15 downto 0);
    signal s_1_9_fu_1146_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal s_1_10_fu_1153_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_14_fu_1188_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal s_21_reg_1566 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_22_reg_1571 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_23_reg_1576 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_24_reg_1581 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_10_fu_1220_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_10_reg_1589 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal shl_ln7_fu_1231_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln7_reg_1594 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln466_fu_1214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_reg_1600 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_12_reg_1605 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln473_fu_1306_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal nblocks_fu_1312_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_9_fu_1364_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_9_reg_1623 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal shl_ln6_fu_1375_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln6_reg_1628 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln479_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_8_reg_1634 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_9_reg_1639 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_716_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_3 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_6 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_7 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_8 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_9 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_10 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_11 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_12 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_13 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_14 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_15 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_16 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_17 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_18 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_19 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_20 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_21 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_22 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_23 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_return_24 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_0_reg_245 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_0_reg_257 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_1_reg_269 : STD_LOGIC_VECTOR (1 downto 0);
    signal s_24_0_reg_280 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_23_0_reg_292 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_22_0_reg_304 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_21_0_reg_316 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_20_0_reg_328 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_19_0_reg_340 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_18_0_reg_352 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_17_0_reg_364 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_16_0_reg_376 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_15_0_reg_388 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_14_0_reg_400 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_13_0_reg_412 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_12_0_reg_424 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_11_0_reg_436 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_10_0_reg_448 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_9_0_reg_460 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_8_0_reg_472 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_7_0_reg_484 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_6_0_reg_496 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_5_0_reg_508 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_4_0_reg_520 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_3_0_reg_532 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_2_0_reg_544 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_1_2_reg_554 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_2_reg_565 : STD_LOGIC_VECTOR (63 downto 0);
    signal nblocks_0_reg_576 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0_rec_reg_588 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_phi_mux_i16_0_phi_fu_604_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i16_0_reg_600 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_phi_mux_p_Val2_2_phi_fu_614_p42 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_i_2_phi_fu_662_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_2_reg_658 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_phi_mux_p_Val2_s_phi_fu_672_p42 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePer_fu_716_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln464_fu_1192_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln451_fu_1025_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln452_fu_1036_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln453_fu_1046_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln454_fu_1056_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln468_1_fu_1249_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln469_1_fu_1281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln470_1_fu_1333_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln471_1_fu_1353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln481_1_fu_1393_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln482_1_fu_1425_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln483_1_fu_1465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln484_1_fu_1485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln468_fu_1226_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln481_fu_1370_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln452_fu_1030_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln453_fu_1041_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln454_fu_1051_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_65_fu_1099_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_18_1_fu_1103_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_64_fu_1085_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_17_1_fu_1089_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_63_fu_1073_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_16_1_fu_1076_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_62_fu_1061_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_15_1_fu_1064_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln455_fu_1133_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_13_fu_1113_p9 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_0_13_fu_1140_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_66_fu_1160_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal input_load_1_fu_1164_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_1174_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln457_fu_1182_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln468_fu_1239_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln468_fu_1243_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln469_fu_1265_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln469_fu_1271_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln469_fu_1275_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln470_fu_1318_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln470_fu_1323_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln470_fu_1327_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln471_fu_1338_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln471_fu_1343_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln471_fu_1347_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln481_fu_1383_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln481_fu_1387_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln482_fu_1409_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln482_fu_1415_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln482_fu_1419_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln483_fu_1450_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln483_fu_1455_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln483_fu_1459_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln484_fu_1470_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln484_fu_1475_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln484_fu_1479_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_condition_1618 : BOOLEAN;
    signal ap_condition_1640 : BOOLEAN;

    component KeccakF1600_StatePer IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        state_0_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_1_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_2_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_3_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_4_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_5_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_6_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_7_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_8_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_9_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_10_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_11_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_12_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_13_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_14_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_15_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_16_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_17_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_18_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_19_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_20_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_21_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_22_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_23_read : IN STD_LOGIC_VECTOR (63 downto 0);
        state_24_read : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_KeccakF1600_StatePer_fu_716 : component KeccakF1600_StatePer
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePer_fu_716_ap_start,
        ap_done => grp_KeccakF1600_StatePer_fu_716_ap_done,
        ap_idle => grp_KeccakF1600_StatePer_fu_716_ap_idle,
        ap_ready => grp_KeccakF1600_StatePer_fu_716_ap_ready,
        state_0_read => s_0_2_reg_565,
        state_1_read => s_1_2_reg_554,
        state_2_read => s_2_0_reg_544,
        state_3_read => s_3_0_reg_532,
        state_4_read => s_4_0_reg_520,
        state_5_read => s_5_0_reg_508,
        state_6_read => s_6_0_reg_496,
        state_7_read => s_7_0_reg_484,
        state_8_read => s_8_0_reg_472,
        state_9_read => s_9_0_reg_460,
        state_10_read => s_10_0_reg_448,
        state_11_read => s_11_0_reg_436,
        state_12_read => s_12_0_reg_424,
        state_13_read => s_13_0_reg_412,
        state_14_read => s_14_0_reg_400,
        state_15_read => s_15_0_reg_388,
        state_16_read => s_16_0_reg_376,
        state_17_read => s_17_0_reg_364,
        state_18_read => s_18_0_reg_352,
        state_19_read => s_19_0_reg_340,
        state_20_read => s_20_0_reg_328,
        state_21_read => s_21_0_reg_316,
        state_22_read => s_22_0_reg_304,
        state_23_read => s_23_0_reg_292,
        state_24_read => s_24_0_reg_280,
        ap_return_0 => grp_KeccakF1600_StatePer_fu_716_ap_return_0,
        ap_return_1 => grp_KeccakF1600_StatePer_fu_716_ap_return_1,
        ap_return_2 => grp_KeccakF1600_StatePer_fu_716_ap_return_2,
        ap_return_3 => grp_KeccakF1600_StatePer_fu_716_ap_return_3,
        ap_return_4 => grp_KeccakF1600_StatePer_fu_716_ap_return_4,
        ap_return_5 => grp_KeccakF1600_StatePer_fu_716_ap_return_5,
        ap_return_6 => grp_KeccakF1600_StatePer_fu_716_ap_return_6,
        ap_return_7 => grp_KeccakF1600_StatePer_fu_716_ap_return_7,
        ap_return_8 => grp_KeccakF1600_StatePer_fu_716_ap_return_8,
        ap_return_9 => grp_KeccakF1600_StatePer_fu_716_ap_return_9,
        ap_return_10 => grp_KeccakF1600_StatePer_fu_716_ap_return_10,
        ap_return_11 => grp_KeccakF1600_StatePer_fu_716_ap_return_11,
        ap_return_12 => grp_KeccakF1600_StatePer_fu_716_ap_return_12,
        ap_return_13 => grp_KeccakF1600_StatePer_fu_716_ap_return_13,
        ap_return_14 => grp_KeccakF1600_StatePer_fu_716_ap_return_14,
        ap_return_15 => grp_KeccakF1600_StatePer_fu_716_ap_return_15,
        ap_return_16 => grp_KeccakF1600_StatePer_fu_716_ap_return_16,
        ap_return_17 => grp_KeccakF1600_StatePer_fu_716_ap_return_17,
        ap_return_18 => grp_KeccakF1600_StatePer_fu_716_ap_return_18,
        ap_return_19 => grp_KeccakF1600_StatePer_fu_716_ap_return_19,
        ap_return_20 => grp_KeccakF1600_StatePer_fu_716_ap_return_20,
        ap_return_21 => grp_KeccakF1600_StatePer_fu_716_ap_return_21,
        ap_return_22 => grp_KeccakF1600_StatePer_fu_716_ap_return_22,
        ap_return_23 => grp_KeccakF1600_StatePer_fu_716_ap_return_23,
        ap_return_24 => grp_KeccakF1600_StatePer_fu_716_ap_return_24);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePer_fu_716_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePer_fu_716_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln464_fu_1192_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln464_fu_1192_p2 = ap_const_lv1_0)))) then 
                    grp_KeccakF1600_StatePer_fu_716_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePer_fu_716_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePer_fu_716_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i16_0_reg_600_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                i16_0_reg_600 <= i_10_reg_1589;
            elsif (((grp_KeccakF1600_StatePer_fu_716_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                i16_0_reg_600 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_1_reg_269_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_1_reg_269 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_1_reg_269 <= i_reg_1493;
            end if; 
        end if;
    end process;

    i_2_reg_658_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                i_2_reg_658 <= i_9_reg_1623;
            elsif (((grp_KeccakF1600_StatePer_fu_716_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i_2_reg_658 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    nblocks_0_reg_576_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                nblocks_0_reg_576 <= nblocks_fu_1312_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                nblocks_0_reg_576 <= ap_const_lv7_7A;
            end if; 
        end if;
    end process;

    p_0_rec_reg_588_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                p_0_rec_reg_588 <= add_ln473_fu_1306_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_0_rec_reg_588 <= ap_const_lv14_0;
            end if; 
        end if;
    end process;

    s_0_0_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_0_0_reg_257 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                s_0_0_reg_257 <= s_1_10_fu_1153_p3;
            end if; 
        end if;
    end process;

    s_0_2_reg_565_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_0_2_reg_565 <= reg_854;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_0_2_reg_565 <= s_0_0_reg_257;
            end if; 
        end if;
    end process;

    s_10_0_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_10_0_reg_448 <= reg_924;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_10_0_reg_448 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_11_0_reg_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_11_0_reg_436 <= reg_931;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_11_0_reg_436 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_12_0_reg_424_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_12_0_reg_424 <= reg_938;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_12_0_reg_424 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_13_0_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_13_0_reg_412 <= reg_945;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_13_0_reg_412 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_14_0_reg_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_14_0_reg_400 <= reg_952;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_14_0_reg_400 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_15_0_reg_388_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_15_0_reg_388 <= reg_959;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_15_0_reg_388 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_16_0_reg_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_16_0_reg_376 <= reg_966;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_16_0_reg_376 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_17_0_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_17_0_reg_364 <= reg_973;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_17_0_reg_364 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_18_0_reg_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_18_0_reg_352 <= reg_980;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_18_0_reg_352 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_19_0_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_19_0_reg_340 <= reg_987;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_19_0_reg_340 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_1_0_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_1_0_reg_245 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                s_1_0_reg_245 <= s_1_9_fu_1146_p3;
            end if; 
        end if;
    end process;

    s_1_2_reg_554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_1_2_reg_554 <= reg_861;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_1_2_reg_554 <= s_1_0_reg_245;
            end if; 
        end if;
    end process;

    s_20_0_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_20_0_reg_328 <= reg_994;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_20_0_reg_328 <= ap_const_lv64_8000000000000000;
            end if; 
        end if;
    end process;

    s_21_0_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_21_0_reg_316 <= s_21_reg_1566;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_21_0_reg_316 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_22_0_reg_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_22_0_reg_304 <= s_22_reg_1571;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_22_0_reg_304 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_23_0_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_23_0_reg_292 <= s_23_reg_1576;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_23_0_reg_292 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_24_0_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_24_0_reg_280 <= s_24_reg_1581;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_24_0_reg_280 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_2_0_reg_544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_2_0_reg_544 <= reg_868;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_2_0_reg_544 <= p_Result_14_fu_1188_p1;
            end if; 
        end if;
    end process;

    s_3_0_reg_532_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_3_0_reg_532 <= reg_875;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_3_0_reg_532 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_4_0_reg_520_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_4_0_reg_520 <= reg_882;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_4_0_reg_520 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_5_0_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_5_0_reg_508 <= reg_889;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_5_0_reg_508 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_6_0_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_6_0_reg_496 <= reg_896;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_6_0_reg_496 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_7_0_reg_484_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_7_0_reg_484 <= reg_903;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_7_0_reg_484 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_8_0_reg_472_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_8_0_reg_472 <= reg_910;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_8_0_reg_472 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;

    s_9_0_reg_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then 
                s_9_0_reg_460 <= reg_917;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                s_9_0_reg_460 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i_10_reg_1589 <= i_10_fu_1220_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                i_9_reg_1623 <= i_9_fu_1364_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1493 <= i_fu_1007_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                input_load_15_reg_1526 <= input_r_q0;
                input_load_16_reg_1532 <= input_r_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_0))) then
                p_Result_11_reg_1600 <= ap_phi_mux_p_Val2_2_phi_fu_614_p42(47 downto 32);
                p_Result_12_reg_1605 <= ap_phi_mux_p_Val2_2_phi_fu_614_p42(63 downto 48);
                    shl_ln7_reg_1594(6 downto 2) <= shl_ln7_fu_1231_p3(6 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln479_fu_1358_p2 = ap_const_lv1_0))) then
                p_Result_8_reg_1634 <= ap_phi_mux_p_Val2_s_phi_fu_672_p42(47 downto 32);
                p_Result_9_reg_1639 <= ap_phi_mux_p_Val2_s_phi_fu_672_p42(63 downto 48);
                    shl_ln6_reg_1628(6 downto 2) <= shl_ln6_fu_1375_p3(6 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_KeccakF1600_StatePer_fu_716_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((grp_KeccakF1600_StatePer_fu_716_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then
                reg_854 <= grp_KeccakF1600_StatePer_fu_716_ap_return_0;
                reg_861 <= grp_KeccakF1600_StatePer_fu_716_ap_return_1;
                reg_868 <= grp_KeccakF1600_StatePer_fu_716_ap_return_2;
                reg_875 <= grp_KeccakF1600_StatePer_fu_716_ap_return_3;
                reg_882 <= grp_KeccakF1600_StatePer_fu_716_ap_return_4;
                reg_889 <= grp_KeccakF1600_StatePer_fu_716_ap_return_5;
                reg_896 <= grp_KeccakF1600_StatePer_fu_716_ap_return_6;
                reg_903 <= grp_KeccakF1600_StatePer_fu_716_ap_return_7;
                reg_910 <= grp_KeccakF1600_StatePer_fu_716_ap_return_8;
                reg_917 <= grp_KeccakF1600_StatePer_fu_716_ap_return_9;
                reg_924 <= grp_KeccakF1600_StatePer_fu_716_ap_return_10;
                reg_931 <= grp_KeccakF1600_StatePer_fu_716_ap_return_11;
                reg_938 <= grp_KeccakF1600_StatePer_fu_716_ap_return_12;
                reg_945 <= grp_KeccakF1600_StatePer_fu_716_ap_return_13;
                reg_952 <= grp_KeccakF1600_StatePer_fu_716_ap_return_14;
                reg_959 <= grp_KeccakF1600_StatePer_fu_716_ap_return_15;
                reg_966 <= grp_KeccakF1600_StatePer_fu_716_ap_return_16;
                reg_973 <= grp_KeccakF1600_StatePer_fu_716_ap_return_17;
                reg_980 <= grp_KeccakF1600_StatePer_fu_716_ap_return_18;
                reg_987 <= grp_KeccakF1600_StatePer_fu_716_ap_return_19;
                reg_994 <= grp_KeccakF1600_StatePer_fu_716_ap_return_20;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_KeccakF1600_StatePer_fu_716_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                s_21_reg_1566 <= grp_KeccakF1600_StatePer_fu_716_ap_return_21;
                s_22_reg_1571 <= grp_KeccakF1600_StatePer_fu_716_ap_return_22;
                s_23_reg_1576 <= grp_KeccakF1600_StatePer_fu_716_ap_return_23;
                s_24_reg_1581 <= grp_KeccakF1600_StatePer_fu_716_ap_return_24;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln449_fu_1001_p2 = ap_const_lv1_0))) then
                    shl_ln_reg_1505(2) <= shl_ln_fu_1017_p3(2);
                trunc_ln451_reg_1498 <= trunc_ln451_fu_1013_p1;
            end if;
        end if;
    end process;
    shl_ln_reg_1505(1 downto 0) <= "00";
    shl_ln7_reg_1594(1 downto 0) <= "00";
    shl_ln6_reg_1628(1 downto 0) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, grp_KeccakF1600_StatePer_fu_716_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state2, icmp_ln449_fu_1001_p2, ap_CS_fsm_state8, icmp_ln466_fu_1214_p2, ap_CS_fsm_state11, icmp_ln479_fu_1358_p2, ap_CS_fsm_state6, icmp_ln464_fu_1192_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln449_fu_1001_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln464_fu_1192_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((grp_KeccakF1600_StatePer_fu_716_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((grp_KeccakF1600_StatePer_fu_716_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln479_fu_1358_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln468_fu_1243_p2 <= std_logic_vector(unsigned(p_0_rec_reg_588) + unsigned(zext_ln468_fu_1239_p1));
    add_ln469_fu_1275_p2 <= std_logic_vector(unsigned(p_0_rec_reg_588) + unsigned(zext_ln469_fu_1271_p1));
    add_ln470_fu_1327_p2 <= std_logic_vector(unsigned(p_0_rec_reg_588) + unsigned(zext_ln470_fu_1323_p1));
    add_ln471_fu_1347_p2 <= std_logic_vector(unsigned(p_0_rec_reg_588) + unsigned(zext_ln471_fu_1343_p1));
    add_ln473_fu_1306_p2 <= std_logic_vector(unsigned(p_0_rec_reg_588) + unsigned(ap_const_lv14_54));
    add_ln481_fu_1387_p2 <= std_logic_vector(signed(ap_const_lv14_2808) + signed(zext_ln481_fu_1383_p1));
    add_ln482_fu_1419_p2 <= std_logic_vector(signed(ap_const_lv14_2808) + signed(zext_ln482_fu_1415_p1));
    add_ln483_fu_1459_p2 <= std_logic_vector(signed(ap_const_lv14_2808) + signed(zext_ln483_fu_1455_p1));
    add_ln484_fu_1479_p2 <= std_logic_vector(signed(ap_const_lv14_2808) + signed(zext_ln484_fu_1475_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_condition_1618_assign_proc : process(ap_phi_mux_i16_0_phi_fu_604_p4)
    begin
                ap_condition_1618 <= (not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_0)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_13)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_12)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_11)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_10)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_F)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_E)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_D)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_C)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_B)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_A)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_9)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_8)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_7)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_6)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_5)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_4)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_3)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_2)) and not((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_1)));
    end process;


    ap_condition_1640_assign_proc : process(ap_phi_mux_i_2_phi_fu_662_p4)
    begin
                ap_condition_1640 <= (not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_0)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_13)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_12)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_11)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_10)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_F)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_E)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_D)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_C)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_B)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_A)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_9)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_8)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_7)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_6)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_5)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_4)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_3)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_2)) and not((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_1)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state11, icmp_ln479_fu_1358_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln479_fu_1358_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_i16_0_phi_fu_604_p4 <= i16_0_reg_600;
    ap_phi_mux_i_2_phi_fu_662_p4 <= i_2_reg_658;

    ap_phi_mux_p_Val2_2_phi_fu_614_p42_assign_proc : process(reg_854, reg_861, reg_868, reg_875, reg_882, reg_889, reg_896, reg_903, reg_910, reg_917, reg_924, reg_931, reg_938, reg_945, reg_952, reg_959, reg_966, reg_973, reg_980, reg_987, reg_994, ap_CS_fsm_state8, icmp_ln466_fu_1214_p2, ap_phi_mux_i16_0_phi_fu_604_p4, ap_condition_1618)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_0))) then
            if ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_0)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_854;
            elsif ((ap_const_boolean_1 = ap_condition_1618)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_994;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_13)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_987;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_12)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_980;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_11)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_973;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_10)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_966;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_F)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_959;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_E)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_952;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_D)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_945;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_C)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_938;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_B)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_931;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_A)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_924;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_9)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_917;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_8)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_910;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_7)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_903;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_6)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_896;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_5)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_889;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_4)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_882;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_3)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_875;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_2)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_868;
            elsif ((ap_phi_mux_i16_0_phi_fu_604_p4 = ap_const_lv5_1)) then 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= reg_861;
            else 
                ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_p_Val2_2_phi_fu_614_p42 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_p_Val2_s_phi_fu_672_p42_assign_proc : process(reg_854, reg_861, reg_868, reg_875, reg_882, reg_889, reg_896, reg_903, reg_910, reg_917, reg_924, reg_931, reg_938, reg_945, reg_952, reg_959, reg_966, reg_973, reg_980, reg_987, reg_994, ap_CS_fsm_state11, icmp_ln479_fu_1358_p2, ap_phi_mux_i_2_phi_fu_662_p4, ap_condition_1640)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln479_fu_1358_p2 = ap_const_lv1_0))) then
            if ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_0)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_854;
            elsif ((ap_const_boolean_1 = ap_condition_1640)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_994;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_13)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_987;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_12)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_980;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_11)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_973;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_10)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_966;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_F)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_959;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_E)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_952;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_D)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_945;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_C)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_938;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_B)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_931;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_A)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_924;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_9)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_917;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_8)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_910;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_7)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_903;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_6)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_896;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_5)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_889;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_4)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_882;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_3)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_875;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_2)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_868;
            elsif ((ap_phi_mux_i_2_phi_fu_662_p4 = ap_const_lv5_1)) then 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= reg_861;
            else 
                ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            ap_phi_mux_p_Val2_s_phi_fu_672_p42 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11, icmp_ln479_fu_1358_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln479_fu_1358_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_62_fu_1061_p1 <= input_load_15_reg_1526(8 - 1 downto 0);
    empty_63_fu_1073_p1 <= input_load_16_reg_1532(8 - 1 downto 0);
    empty_64_fu_1085_p1 <= input_r_q1(8 - 1 downto 0);
    empty_65_fu_1099_p1 <= input_r_q0(8 - 1 downto 0);
    empty_66_fu_1160_p1 <= input_r_q0(8 - 1 downto 0);
    grp_KeccakF1600_StatePer_fu_716_ap_start <= grp_KeccakF1600_StatePer_fu_716_ap_start_reg;
    i_10_fu_1220_p2 <= std_logic_vector(unsigned(i16_0_reg_600) + unsigned(ap_const_lv5_1));
    i_9_fu_1364_p2 <= std_logic_vector(unsigned(i_2_reg_658) + unsigned(ap_const_lv5_1));
    i_fu_1007_p2 <= std_logic_vector(unsigned(i_1_reg_269) + unsigned(ap_const_lv2_1));
    icmp_ln449_fu_1001_p2 <= "1" when (i_1_reg_269 = ap_const_lv2_2) else "0";
    icmp_ln464_fu_1192_p2 <= "1" when (nblocks_0_reg_576 = ap_const_lv7_0) else "0";
    icmp_ln466_fu_1214_p2 <= "1" when (i16_0_reg_600 = ap_const_lv5_15) else "0";
    icmp_ln479_fu_1358_p2 <= "1" when (i_2_reg_658 = ap_const_lv5_15) else "0";
    input_load_15_1_fu_1064_p4 <= input_load_15_reg_1526(15 downto 8);
    input_load_16_1_fu_1076_p4 <= input_load_16_reg_1532(15 downto 8);
    input_load_17_1_fu_1089_p4 <= input_r_q1(15 downto 8);
    input_load_18_1_fu_1103_p4 <= input_r_q0(15 downto 8);
    input_load_1_fu_1164_p4 <= input_r_q0(15 downto 8);

    input_r_address0_assign_proc : process(ap_CS_fsm_state2, icmp_ln449_fu_1001_p2, ap_CS_fsm_state3, zext_ln451_fu_1025_p1, zext_ln454_fu_1056_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_r_address0 <= zext_ln454_fu_1056_p1(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln449_fu_1001_p2 = ap_const_lv1_1))) then 
            input_r_address0 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln449_fu_1001_p2 = ap_const_lv1_0))) then 
            input_r_address0 <= zext_ln451_fu_1025_p1(4 - 1 downto 0);
        else 
            input_r_address0 <= "XXXX";
        end if; 
    end process;


    input_r_address1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, zext_ln452_fu_1036_p1, zext_ln453_fu_1046_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_r_address1 <= zext_ln453_fu_1046_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_r_address1 <= zext_ln452_fu_1036_p1(4 - 1 downto 0);
        else 
            input_r_address1 <= "XXXX";
        end if; 
    end process;


    input_r_ce0_assign_proc : process(ap_CS_fsm_state2, icmp_ln449_fu_1001_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln449_fu_1001_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln449_fu_1001_p2 = ap_const_lv1_0)))) then 
            input_r_ce0 <= ap_const_logic_1;
        else 
            input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_r_ce1_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            input_r_ce1 <= ap_const_logic_1;
        else 
            input_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    nblocks_fu_1312_p2 <= std_logic_vector(unsigned(nblocks_0_reg_576) + unsigned(ap_const_lv7_7F));
    or_ln452_fu_1030_p2 <= (shl_ln_fu_1017_p3 or ap_const_lv3_1);
    or_ln453_fu_1041_p2 <= (shl_ln_reg_1505 or ap_const_lv3_2);
    or_ln454_fu_1051_p2 <= (shl_ln_reg_1505 or ap_const_lv3_3);
    or_ln457_fu_1182_p2 <= (tmp_fu_1174_p3 or ap_const_lv16_1F00);
    or_ln469_fu_1265_p2 <= (shl_ln7_fu_1231_p3 or ap_const_lv7_1);
    or_ln470_fu_1318_p2 <= (shl_ln7_reg_1594 or ap_const_lv7_2);
    or_ln471_fu_1338_p2 <= (shl_ln7_reg_1594 or ap_const_lv7_3);
    or_ln482_fu_1409_p2 <= (shl_ln6_fu_1375_p3 or ap_const_lv7_1);
    or_ln483_fu_1450_p2 <= (shl_ln6_reg_1628 or ap_const_lv7_2);
    or_ln484_fu_1470_p2 <= (shl_ln6_reg_1628 or ap_const_lv7_3);

    output_r_address0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state12, zext_ln468_1_fu_1249_p1, zext_ln470_1_fu_1333_p1, zext_ln481_1_fu_1393_p1, zext_ln483_1_fu_1465_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_r_address0 <= zext_ln483_1_fu_1465_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_r_address0 <= zext_ln481_1_fu_1393_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_r_address0 <= zext_ln470_1_fu_1333_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_address0 <= zext_ln468_1_fu_1249_p1(14 - 1 downto 0);
        else 
            output_r_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_address1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state12, zext_ln469_1_fu_1281_p1, zext_ln471_1_fu_1353_p1, zext_ln482_1_fu_1425_p1, zext_ln484_1_fu_1485_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_r_address1 <= zext_ln484_1_fu_1485_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_r_address1 <= zext_ln482_1_fu_1425_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_r_address1 <= zext_ln471_1_fu_1353_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_address1 <= zext_ln469_1_fu_1281_p1(14 - 1 downto 0);
        else 
            output_r_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_ce1_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_r_ce1 <= ap_const_logic_1;
        else 
            output_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(ap_CS_fsm_state8, p_Result_11_reg_1600, ap_CS_fsm_state11, p_Result_8_reg_1634, ap_CS_fsm_state9, ap_CS_fsm_state12, trunc_ln468_fu_1226_p1, trunc_ln481_fu_1370_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_r_d0 <= p_Result_8_reg_1634;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_r_d0 <= trunc_ln481_fu_1370_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_r_d0 <= p_Result_11_reg_1600;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_d0 <= trunc_ln468_fu_1226_p1;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_d1_assign_proc : process(ap_CS_fsm_state8, p_Result_12_reg_1605, ap_CS_fsm_state11, p_Result_9_reg_1639, ap_CS_fsm_state9, ap_phi_mux_p_Val2_2_phi_fu_614_p42, ap_CS_fsm_state12, ap_phi_mux_p_Val2_s_phi_fu_672_p42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_r_d1 <= p_Result_9_reg_1639;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_r_d1 <= ap_phi_mux_p_Val2_s_phi_fu_672_p42(31 downto 16);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            output_r_d1 <= p_Result_12_reg_1605;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            output_r_d1 <= ap_phi_mux_p_Val2_2_phi_fu_614_p42(31 downto 16);
        else 
            output_r_d1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_we0_assign_proc : process(ap_CS_fsm_state8, icmp_ln466_fu_1214_p2, ap_CS_fsm_state11, icmp_ln479_fu_1358_p2, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln479_fu_1358_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_0)))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_we1_assign_proc : process(ap_CS_fsm_state8, icmp_ln466_fu_1214_p2, ap_CS_fsm_state11, icmp_ln479_fu_1358_p2, ap_CS_fsm_state9, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln479_fu_1358_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln466_fu_1214_p2 = ap_const_lv1_0)))) then 
            output_r_we1 <= ap_const_logic_1;
        else 
            output_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_13_fu_1113_p9 <= (((((((empty_65_fu_1099_p1 & input_load_18_1_fu_1103_p4) & empty_64_fu_1085_p1) & input_load_17_1_fu_1089_p4) & empty_63_fu_1073_p1) & input_load_16_1_fu_1076_p4) & empty_62_fu_1061_p1) & input_load_15_1_fu_1064_p4);
    p_Result_14_fu_1188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln457_fu_1182_p2),64));
    s_0_13_fu_1140_p2 <= (select_ln455_fu_1133_p3 xor p_Result_13_fu_1113_p9);
    s_1_10_fu_1153_p3 <= 
        s_0_0_reg_257 when (trunc_ln451_reg_1498(0) = '1') else 
        s_0_13_fu_1140_p2;
    s_1_9_fu_1146_p3 <= 
        s_0_13_fu_1140_p2 when (trunc_ln451_reg_1498(0) = '1') else 
        s_1_0_reg_245;
    select_ln455_fu_1133_p3 <= 
        s_1_0_reg_245 when (trunc_ln451_reg_1498(0) = '1') else 
        s_0_0_reg_257;
    shl_ln6_fu_1375_p3 <= (i_2_reg_658 & ap_const_lv2_0);
    shl_ln7_fu_1231_p3 <= (i16_0_reg_600 & ap_const_lv2_0);
    shl_ln_fu_1017_p3 <= (trunc_ln451_fu_1013_p1 & ap_const_lv2_0);
    tmp_fu_1174_p3 <= (empty_66_fu_1160_p1 & input_load_1_fu_1164_p4);
    trunc_ln451_fu_1013_p1 <= i_1_reg_269(1 - 1 downto 0);
    trunc_ln468_fu_1226_p1 <= ap_phi_mux_p_Val2_2_phi_fu_614_p42(16 - 1 downto 0);
    trunc_ln481_fu_1370_p1 <= ap_phi_mux_p_Val2_s_phi_fu_672_p42(16 - 1 downto 0);
    zext_ln451_fu_1025_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1017_p3),64));
    zext_ln452_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln452_fu_1030_p2),64));
    zext_ln453_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln453_fu_1041_p2),64));
    zext_ln454_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln454_fu_1051_p2),64));
    zext_ln468_1_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln468_fu_1243_p2),64));
    zext_ln468_fu_1239_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln7_fu_1231_p3),14));
    zext_ln469_1_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln469_fu_1275_p2),64));
    zext_ln469_fu_1271_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln469_fu_1265_p2),14));
    zext_ln470_1_fu_1333_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln470_fu_1327_p2),64));
    zext_ln470_fu_1323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln470_fu_1318_p2),14));
    zext_ln471_1_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln471_fu_1347_p2),64));
    zext_ln471_fu_1343_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln471_fu_1338_p2),14));
    zext_ln481_1_fu_1393_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln481_fu_1387_p2),64));
    zext_ln481_fu_1383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln6_fu_1375_p3),14));
    zext_ln482_1_fu_1425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln482_fu_1419_p2),64));
    zext_ln482_fu_1415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln482_fu_1409_p2),14));
    zext_ln483_1_fu_1465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln483_fu_1459_p2),64));
    zext_ln483_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln483_fu_1450_p2),14));
    zext_ln484_1_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln484_fu_1479_p2),64));
    zext_ln484_fu_1475_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln484_fu_1470_p2),14));
end behav;
